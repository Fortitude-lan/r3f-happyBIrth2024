/*
 * @Descripttion: 
 * @version: 1.0
 * @Author: Hesin
 * @Date: 2023-12-25 19:16:24
 * @LastEditors: Hesin
 * @LastEditTime: 2024-08-29 22:53:50
 */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 public/models/pikachu.glb -o src/components/gltf/Pikachu.jsx 
*/

import React, { useEffect, useRef } from "react";
import { useGLTF, KeyboardControls } from "@react-three/drei";
import * as THREE from "three";
import { useFrame,useThree } from "@react-three/fiber";

export function Pikachu({ ...props }) {
  const { nodes, scene, materials } = useGLTF("/models/pikachu.glb");

  
  const pikachuRef = useRef();

  const pikaMP3 = new Audio("/sounds/pikachu.mp3");
  useFrame(({ pointer, camera }) => {
    /*********  LOOK AT *********/
    // 计算鼠标相对于模型的偏移量
    const offsetX = pointer.x - pikachuRef.current.position.x / camera.position.z;
    const offsetY = pointer.y - pikachuRef.current.position.y / camera.position.z;
    // 计算旋转角度
    const rotationY = Math.atan2(offsetX, -offsetY);
    
    pikachuRef.current.rotation.y = rotationY;
  });
  return (
    <group ref={pikachuRef} {...props}>

      {/*模型刚体： 模型边缘识别有问题 所以加一个刚体 */}
      <mesh
        scale={[0.5, 0.8, 0.7]}
        position={[0, 0.4, -0.1]}
        onClick={(e) => pikaMP3.play()}
        onPointerOver={() => (document.body.style.cursor = "pointer")}
        onPointerOut={() => (document.body.style.cursor = "auto")}
      >
        <boxGeometry />
        {/* opacity 查看外框*/}
        <meshBasicMaterial transparent opacity={0} />
      </mesh>

      <primitive object={scene} />
      {/* **************模型 glb ********************* */}
      {/* 辅助坐标 */}
      {/* <axesHelper args={[0.5]} /> */}


      {/* 
      <group {...props} dispose={null}>
        <primitive object={nodes.pm0025_00_pikachu} /> 

        <skinnedMesh
          geometry={nodes.PikachuF_1.geometry}
          material={materials["Material #160"]}
          skeleton={nodes.PikachuF_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.PikachuF_2.geometry}
          material={materials["Material #161"]}
          skeleton={nodes.PikachuF_2.skeleton}
        />
        <skinnedMesh
          geometry={nodes.PikachuF_3.geometry}
          material={materials["Material #162"]}
          skeleton={nodes.PikachuF_3.skeleton}
        />
        <skinnedMesh
          geometry={nodes.PikachuF_4.geometry}
          material={materials["Material #163"]}
          skeleton={nodes.PikachuF_4.skeleton}
        />
      </group>
         */}
    </group>
  );
}

useGLTF.preload("/models/pikachu.glb");
